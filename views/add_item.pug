include layouts/header
include itembody

.container.page-data(style={'margin-top':'70px', 'margin-bottom': '70px'})
	form.form-horizontal(method='POST' action='/upload' id="upload_image" enctype="multipart/form-data")

		.well.col-sm-12
			input.form-control(type='hidden' id="idx" name='idx' value=userID) 

			.editAdSection
				+itembody
						
			button.btn.btn-primary.pull-right(type='submit' id='submit') Submit Posting

		
		.div(id="dialog-delete-confirm" title="Remove image?")
		.div(id="dialog-submit-confirm" title="Submit item?")
	  
script(type='text/javascript').
	$(document).ready(function() {
			$("#files").on("change", handleFileSelect);
			$("body").on("click", ".thumb", removeFile);
			$("body").on("click", "#rotator", rotateImage);

			var config = {
				'.chosen-select'           : {},
				'.chosen-select-deselect'  : {allow_single_deselect:true},
				'.chosen-select-no-single' : {disable_search_threshold:10},
				'.chosen-select-no-results': {no_results_text:'Oops, nothing found!'},
				'.chosen-select-width'     : {width:"95%"}
			}
			for (var selector in config) {
				$("#category").chosen(config[selector]);
			}
			
			
			for (var selector in config) {
				$("#type").chosen(config[selector]);
			}

			for (var selector in config) {
				$("#location").chosen(config[selector]);
			}			
			
			
			var MAX_WIDTH = 400;
			var MAX_HEIGHT = 300;  
			var resizedFiles = [];
			var files = [];

			function rotateImage() {
				var imageId = $(this).parent().find("img.thumb").attr('data-file');
				console.log('rotatedImages: ' + imageId);	

				var image = $(this).parent().find("img.thumb");
				var angle = $(image).data('rotate');					
				//alert(angle);
				
				var new_angle_value = angle + 90;
				if (new_angle_value==360) new_angle_value=0;
				var new_angle = 'rotate(' + new_angle_value + 'deg)';
				$(image).css({ 
					'-webkit-transform': new_angle,
					'-moz-transform': new_angle,
					'-o-transform': new_angle,
					'-ms-transform': new_angle,
					'transform': new_angle 
				});
				$(image).data('rotate',new_angle_value); 	
				for(var i=0;i<resizedFiles.length;i++) {
								  if(resizedFiles[i].fileName === imageId) {
									  resizedFiles[i].Angle = new_angle_value;
									  break;
								  }
				}			
			};


			function handleFileSelect(evt) {
			  files = evt.target.files; 
			  var filesArr = Array.prototype.slice.call(files);
			  var total = files.length; loaded = 0;

			  $('#progressBar').removeClass('noshow').addClass('show');

			  filesArr.forEach(function(f) {

				  if(!f.type.match("image.*")) { return; }
				  var img = new Image();  
				  var reader = new FileReader();
				  var dataurl = '';
							 
				 reader.onload = function(e) {
					  img.onload = function() {
					  
						  console.log('file size, Mb = ' + (f.size/1024)/1024);
						  var canvas = document.createElement("canvas");
						 
						  var ctx = canvas.getContext("2d");
						  ctx.drawImage(img, 0, 0);

						  var width = img.width;
						  var height = img.height;
						  console.log('image width x height = ' + img.width + 'x' + img.height);
						  
						  if (width > height) {
							if (width > MAX_WIDTH) {
							  height *= MAX_WIDTH / width;
							  width = MAX_WIDTH;
							}
						  } else {
							if (height > MAX_HEIGHT) {
							  width *= MAX_HEIGHT / height;
							  height = MAX_HEIGHT;
							}
						  }
						  canvas.width = width;
						  canvas.height = height;
						
							console.log('canvas width x height = ' + canvas.width + 'x' + canvas.height);				  
						  
						  var ctx = canvas.getContext("2d");
						  ctx.drawImage(img, 0, 0, width, height);

						  dataurl = canvas.toDataURL();
						  
						  //console.log('dataurl = ' + dataurl);

						  resizedFiles.push({dataurl: dataurl, fileName: f.name, Angle: 0});
						  console.log(f.name);
						  var span = document.createElement('span');
						  span.innerHTML = ['<img class="thumb" src="' +dataurl+ '\" data-file="'+f.name+ '" data-rotate="0" title="Click to remove"' +escape(f.name)+ '"/><button id="rotator" type="button" class="glyphicon glyphicon-repeat" />'].join('');
					  
						  document.getElementById('list').insertBefore(span, null);
						  loaded++;
						  addPercent(0);
						  if (loaded == total){
							  addPercent(0);
							   $('#progressBar').removeClass('show').addClass('noshow');
						  }
					  }
					  img.src = e.target.result;  
									  
				  }  

				  reader.onprogress = function(data) {
					  if (data.lengthComputable) {                                            
						  var progress = parseInt( ((data.loaded / data.total) * 100), 10 );
						  addPercent(progress); } 
				  }
				  reader.readAsDataURL(f);
			  })
			  
			}
			

			function removeFile(e) {
					var file = $(this).data("file");
					var imageToRemove = $(this).parent();
					
					$("#dialog-delete-confirm").dialog({
						resizable: false,
						height: "auto",
						width: 400,
						modal: true,
						buttons: {
							"Remove": function () {
							 
							  for(var i=0;i<resizedFiles.length;i++) {
								  if(resizedFiles[i].fileName === file) {
									  resizedFiles.splice(i,1);
									  break;
								  }
							  }
							  $(imageToRemove).remove();
								
							  $(this).dialog("close");
							},
							Cancel: function () {
								$(this).dialog("close");
							}
						}
					});             
			}
			
		
			function transformImages() {
				resizedFiles.forEach(function(entry) {
					var img = new Image();
					img.src = entry.dataurl;
					var canvas = document.createElement("canvas");						 
					var ctx = canvas.getContext("2d");
					ctx.drawImage(img, 0, 0);

					switch (entry.Angle) {
						case 0:	
						case 180:
							//console.log('entry.Angle == 180');
							canvas.width = img.width;
							canvas.height = img.height;
							break;
						case 90:
						case 270:
							//console.log('entry.Angle == 270');
							canvas.width = img.height;
							canvas.height = img.width;
							break;
					}

					var  cw = canvas.width * 0.5, ch = canvas.height * 0.5;
					ctx.translate(cw, ch);
					ctx.rotate(entry.Angle*Math.PI/180);
					ctx.translate(-img.width * 0.5, -img.height * 0.5);
					/// draw image and reset transform
					ctx.drawImage(img, 0, 0);
					ctx.setTransform(1, 0, 0, 1, 0, 0);

					entry.dataurl = canvas.toDataURL();
				});
			}


			$("#upload_image").submit(function(e) {
				e.preventDefault();

				var actionurl = e.currentTarget.action;
				var formData =  $("#upload_image").serializeArray();

					$("#dialog-submit-confirm").dialog({
						resizable: false,
						height: "auto",
						width: 400,
						modal: true,
						buttons: {
							"Submit": function () {
								transformImages();
								resizedFiles.forEach(function(entry) {
									formData.push({name: 'images[]', value: entry.dataurl}); 
								});

								$.ajax({
									url: actionurl,
									type: 'post',
									data: formData,
									success: function(data) {
									  resizedFiles = [];
									  $('#submitProgressBar').removeClass('show').addClass('noshow');
									  console.log('success');   
									  window.location = '/allpostings'; 
									},
									xhr: function() {
									  var xhr = new XMLHttpRequest();
									  xhr.upload.addEventListener('progress', function(evt) {
										$('#submitProgressBar').removeClass('noshow').addClass('show');
										if (evt.lengthComputable) {
											var percentComplete = evt.loaded / evt.total;
											percentComplete = parseInt(percentComplete * 100);
											 var bar = document.getElementById("submitProgressBar");
											 //bar.value = percentComplete;
										}
									  }, false);
									  return xhr;
									}
								});
								
								$(this).dialog("close");
							},
							Cancel: function () {
								$(this).dialog("close");
							}
						}
					});          			
			});

					
			function addPercent(progress) {
				var bar = document.getElementById("progressBar");
				bar.value = progress;
			}


	});
